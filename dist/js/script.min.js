/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/exercice.js":
/*!****************************!*\
  !*** ./src/js/exercice.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\n// let text = \"Hello world!\";\n\n// function someFunc(text) {\n//   console.log(text);\n//   let num = 20;\n// }\n// someFunc();\n\n// // function calc(a, b) {\n// //   return a + b;\n// // }\n\n// // console.log(calc(4, 6)); //\n\n// function ret() {\n//   let num = 50;\n//   return num;\n// }\n\n// const anotherNum = ret();\n// console.log(anotherNum);\n\n// const logger = function () {\n//   console.log(\"Hello\");\n// };\n\n// logger();\n\n// const calc = (a, b) => a + b;\n\n// const usdCurr = 38;\n// const eurCurr = 40;\n// const discount = 0.9;\n\n// function convert(amount, curr) {\n//   return curr * amount;\n// }\n\n// function promotion(result) {\n//   console.log(result * discount);\n// }\n\n// const res = convert(500, usdCurr);\n// promotion(res);\n\n// function test() {\n//   for (let i = 0; i < 5; i++) {\n//     console.log(i);\n//     if (i === 3) return;\n//   }\n//   console.log(\"Done\");\n// }\n// test();\n\n// function doNothing() {}\n// console.log(doNothing() === undefined);\n\n// const str = \"test\";\n\n// console.log(str.length);\n// console.log(str.toUpperCase());\n// console.log(str.toLowerCase());\n\n// const fruit = \"Some fruit\";\n// console.log(fruit.indexOf(\"fruit\"));\n\n// const logg = \"Hello world!\";\n// console.log(logg.slice(0, 5)); //\n// console.log(logg.slice(6, 12)); //\n\n// console.log(logg.substring(0, 5)); //\n\n// const number = 12.2;\n// console.log(Math.round(number));\n\n// const test1 = \"12.2px\";\n// console.log(parseInt(test1));\n// console.log(parseFloat(test1));\n\n// function first() {\n//   setTimeout(function () {\n//     console.log(1);\n//   }, 500);\n// }\n// function second() {\n//   console.log(2);\n// }\n// first();\n// second();\n\n// function learnJS(lang, callback) {\n//   console.log(`I am learning: ${lang}`);\n//   callback();\n// }\n// learnJS(\"JavaScript\", function () {\n//   console.log(\"Done!\");\n// });\n\n// const someObj = {\n//   name: \"test\",\n//   age: 35,\n//   isMarried: false,\n//   haveCars: [\"bmw\", \"mercedes\", \"audi\"],\n//   kids: {\n//     john: 6,\n//     melisa: 12,\n//     peter: 17,\n//   },\n//   job: \"Software Engineer\",\n// };\n\n// console.log(Object.keys(someObj));\n\n// const options = {\n//   name: \"test\",\n//   width: 1024,\n//   height: 1024,\n//   colors: {\n//     border: \"black\",\n//     background: \"red\",\n//   },\n//   makeTest: function () {\n//     console.log(\"Test\");\n//   },\n// };\n\n// let counter = 0;\n// for (let key in options) {\n//   if (typeof options[key] === \"object\") {\n//     console.log(`${key}`);\n//     counter++;\n//     for (let i in options[key]) {\n//       console.log(`${i}: ${options[key][i]}`);\n//     }\n//   } else {\n//     console.log(`${key}: ${options[key]}`);\n//     counter++;\n//   }\n// }\n// console.log(counter);\n// console.log(Object.keys(options).length);\n\n// const { border, bg } = options.colors;\n\n// const arr = [11, 2, 44, 16, 38, 94];\n// // arr.pop();\n// // console.log(arr);\n// // arr.push(5);\n// // console.log(arr);\n// console.log(arr.sort(compareNum)); //!!!!!!!!!!!!!!!\n\n// function compareNum(a, b) {   // !!!!!!!!!!!!!\n//   return a - b;\n// }\n\n// for (let value of arr) {\n//   console.log(value);\n// }\n\n// arr.forEach(function (item, i, arr) {\n//   console.log(`Item #${i + 1}: ${item}`);\n// });\n\n// const\tstr = prompt(\"products\", \"\");\n// const products = str.split(\", \");\n// console.log(products);\n\n// let a = 5,\n//   b = a;\n\n// b = b + 5;\n\n// console.log(b);\n// console.log(a);\n\n// const obj = {\n// \ta: 5,\n// \tb: 1\n// }\n\n// const copy = obj;  // link\n// copy.a = 10;\n// console.log(copy);\n// console.log(obj);\n//  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// function copy(mainObj) {\n//   let objCopy = {};\n//   let key;\n//   for (key in mainObj) {\n//     objCopy[key] = mainObj[key];\n//   }\n//   return objCopy;\n// }\n// const newNumbers = copy(numbers);\n// newNumbers.a = 10;\n// console.log(newNumbers);\n// console.log(numbers);\n\n// const numbers = {\n//   a: 2,\n//   b: 5,\n//   c: {\n//     x: 7,\n//     y: 4,\n//   },\n// };\n\n// const add = {\n//   d: 17,\n//   e: 20,\n// };\n\n// const x = Object.assign({}, add);\n\n// const oldArray = [\"a\", \"b\", \"c\"];\n// const newArr = oldArray.slice();\n// newArr[1] = \"bbbb\";\n// console.log(newArr);\n\n// const video = [\"youtube\", \"vimeo\", \"tiktok\"],\n//   blogs = [\"wordpress\", \"livejournal\", \"blogger\"],\n//   internet = [...video, ...blogs, \"facebook\"];\n// console.log(internet);\n\n// function log(a, b, c) {\n//   console.log(a);\n//   console.log(b);\n//   console.log(c);\n// }\n\n// const num = [2, 5, 7];\n// log(...num);\n\n// const array = [\"a\", \"b\"];\n// const newArray = [...array];\n\n// const obj = { one: 1, two: 2 };\n// const newObj = { ...obj };\n// console.log(newObj);\n\n// const soldier = {\n//   health: 400,\n//   armor: 100,\n//   sayHello: function () {\n//     console.log(\"Hello!\");\n//   },\n// };\n\n// const jhon = {\n// \thealth: 100\n// }\n\n// const jhon = Object.create(soldier);\n\n//   //adding  properties to the already created object from parent object\n// Object.setPrototypeOf(jhon, soldier);\n\n// //to string\n\n// console.log(typeof String(null));\n// console.log(typeof String(4));\n\n// console.log(typeof (5 + \"\"));\n\n// const num = 5;\n// console.log(\"https://instagram.com/catalog/\" + num);\n\n// const fontSize = 26 + \"px\";\n\n// //To number\n\n// console.log(typeof Number(\"4\"));\n\n// console.log(typeof +\"5\");\n\n// console.log(typeof parseInt(\"15px\", 10));\n\n// let answer = +prompt(\"Some question\", \"\");\n// console.log(answer);\n\n// //to boolean\n\n// 0,'',null,undefined.NaN; - false\n\n// let switcher = null;\n\n// if (switcher) {\n//   console.log(\"Working\");\n// }\n\n// switcher = 1;\n// console.log();\n// if (switcher) {\n//   console.log(\"Working\");\n// }\n\n// console.log(typeof Boolean(\"4\"));\n\n// console.log(typeof !!\"4\");\n\n// let someVar = 4;\n// console.log(someVar); //true\n// let number = 5; debugger;\n// function logNumber() {\n// \tlet number = 4; debugger;\n//   console.log(number);\n// }\n\n// number = 6;\n// logNumber(); debugger;\n\n// first stupid thing in js !!!!!!!!!!!!!!!!!!!!!!!!\n// function createCounter() {\n//   let counter = 0;\n//   const myFunction = function () {\n//     return (counter += 1);\n//   };\n// \tconsole.log(counter);\n//   return myFunction;\n// }\n\n// const increment = createCounter();\n// const c1 = increment(),\n//   c2 = increment(),\n//   c3 = increment();\n// console.log(c1, c2, c3);\n\n// increment;\n// console.dir(increment);\n\n// let x = 5;\n// console.log(x++); // 5\n\n// console.log([] + false - null + true );  // NaN\n\n// let y = 1;\n// let x = y = 2;\n// console.log(x); //2\n\n// console.log([] + 1 + 2); //\"12\"\n\n// console.log(\"1\"[0]);  //\"1\"\n\n// console.log(2 && 1 && null && undefined);  //null\n\n// console.log(null || 2 && 3 || 4);\n\n// let a = [1, 2, 3],\n// b = [1, 2, 3];\n// console.log(a == b); //\n// console.log(+\"infinity\");\n// console.log(\"Ёжик\">\"яблоко\");\n\n// console.log(!!(1 && 2) === (1 && 2));\n// console.log(0 || \"\" || 2 || undefined || true || false);\n\n// let landmarks = [];\n// landmarks.push(\"My house\");\n// landmarks.push(\"The bank\");\n// landmarks.push(\"The post office\");\n// landmarks.push(\"The town hall\");\n// landmarks.push(\"The park\");\n// landmarks.push(\"The library\");\n// landmarks.push(\"Friends house\");\n\n// console.log(`All the landmarks ${landmarks}`);\n\n// for (let i = landmarks.length; i > 1; i--) {\n//   landmarks.pop();\n// \tconsole.log(landmarks);\n// }\n// console.log(landmarks[Math.floor(Math.random() * landmarks.length)]);\n\n// const btn = document.getElementById(\"btn\"),\n//   overlay = document.querySelector(\".overlay\");\n// const secondBtn = document.getElementById(\"secondBtn\");\n// const thirdBtn = document.getElementById(\"thirdBtn\");\n// btn.onclick = function () {\n//   alert(\"Click\");\n// };\n// const deleteElement = (e) => {\n//   // e.target.remove();\n//   console.log(e.target);\n//   console.log(e.type);\n// };\n\n// btn.addEventListener(\"click\", () => {\n//   alert(\"click\");\n// });\n// secondBtn.addEventListener(\"mouseenter\", () => {\n//   alert(\"hover\");\n// });\n// secondBtn.addEventListener(\"mouseenter\", () => {\n//   secondBtn.style.backgroundColor = \"red\";\n// });\n\n// thirdBtn.addEventListener(\"click\", deleteElement);\n// overlay.addEventListener(\"click\", deleteElement);\n\n// const link = document.querySelector(\"a\");\n\n// link.addEventListener(\"click\", (event) => {\n//   event.preventDefault();\n//   alert(\"You clicked on me!\");\n// });\n\n// const btn = document.querySelectorAll('button');\n\n// btn.forEach(btn => {\n// \tbtn.addEventListener(\"click\", deleteElement, {once:true});\n// })\n\n// console.log(document.body);\n// console.log(document.documentElement);\n// console.log(document.body.childNodes);\n// console.log(document.body.firstElementChild);\n// console.log(document.body.lastElementChild);\n// console.log(document.querySelector('.heart').parentNode);\n// console.log(document.querySelector('[data-current=\"5\"]').nextSibling);\n// console.log(document.querySelector('[data-current=\"5\"]').previousSibling);\n\n// for (let node  of document.body.childNodes) {\n// \tif(node.nodeName == \"#text\"){\n// \t\tcontinue;\n// \t}\n// \tconsole.log(node);\n// }\n\n// function pow(x, n) {\n//   let res = 1;\n\n//   for (let i = 0; i < n; i++) {\n//     res *= x;\n//   }\n//   return res;\n// }\n\n// function powR(x, n) {\n//   if (n === 1) {\n//     return x;\n//   } else {\n//     return x * powR(x, n - 1);\n//   }\n// }\n// powR(2, 12);\n// console.log(powR(2, 8));\n\n// let students = {\n//   js: [\n//     {\n//       name: \"Jhon\",\n//       progress: 100,\n//     },\n//     {\n//       name: \"Iban\",\n//       progress: 60,\n//     },\n//   ],\n//   html: {\n//     basic: [\n//       {\n//         name: \"Peter\",\n//         progress: 20,\n//       },\n//       {\n//         name: \"Ann\",\n//         progress: 18,\n//       },\n//     ],\n//     pro: [\n//       {\n//         name: \"Sam\",\n//         progress: 10,\n//       },\n//     ],\n//   },\n// };\n\n// function getAverageProgress(data) {\n//   let total = 0;\n//   let students = 0;\n\n//   for (let course of Object.values(data)) {\n//     if (Array.isArray(course)) {\n//       students += course.length;\n\n//       for (let i = 0; i < course.length; i++) {\n//         total += course[i].progress;\n//       }\n//     } else {\n//       for (let subCourse of Object.values(course)) {\n//         students += subCourse.length;\n\n//         for (let i = 0; i < subCourse.length; i++) {\n//           total += subCourse[i].progress;\n//         }\n//       }\n//     }\n//   }\n\n//   return total / students;\n// }\n\n// console.log(getAverageProgress(students));\n\n// function getAverageProgressByRecurtion(data) {\n//   if (Array.isArray(data)) {\n//     let total = 0;\n\n//     for (let i = 0; i < data.length; i++) {\n//       total += data[i].progress;\n//     }\n//     return [total, data.length];\n//   } else {\n// \t\tlet total = [0,0];\n// \t\tfor (let subData of Object.values(data)) {\n// \t\t\tconst subDataArr = getAverageProgressByRecurtion(subData);\n// \t\t\ttotal[0] += subDataArr[0];\n// \t\t\ttotal[1] += subDataArr[1];\n// \t\t}\n// \t\treturn total;\n//   }\n// }\n\n// const  result = getAverageProgressByRecurtion(students);\n// console.log(`The average progress is ${result[0]} out of ${result[1]}`);\n// console.log(result);\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//touchstart\n//touchmove\n//touchend\n//touchenter\n//touchleave\n\n// window.addEventListener(\"DOMContentLoaded\", () => {\n//   const title = document.querySelector(\".promo__title\");\n\n//   title.addEventListener(\"touchstart\", (e) => {\n//     e.preventDefault();\n//     console.log(\"Start\");\n// \t\tconsole.log(e.touches);\n// \t\tconsole.log(e.targetTouches);\n//   });\n\n// title.addEventListener(\"touchmove\", (e) => {\n//   e.preventDefault();\n//   console.log(\"Move\");\n// });\n\n// title.addEventListener(\"touchend\", (e) => {\n//   e.preventDefault();\n//   console.log(\"End\");\n// });\n// });\n\n// touches\n// targetTouches  -- пальці які взаємодіють саме з цим елементом\n// changedTouches-- коли користувач перемістив пальці від одного до іншого елемента\n\n// const lii = document.querySelectorAll(\"li\");\n// console.log(lii);\n\n// const box = document.querySelector(\".box\"),\n//   newHeight = 100,\n//   newWidth = 400;\n\n// function changeParameters(elem, h, w) {\n//   elem.style.height = `${h ?? 200}px`;\n//   elem.style.width = `${w ?? 200}px`;\n// \telem.innerHTML = (h ?? 200) * (w ?? 200);\n// }\n\n// changeParameters(box, newHeight, newWidth);\n\n// let userName;\n// let userKey;\n\n// console.log(userName ?? userKey ?? \"User\");\n\n// const box = document.querySelector(\".box\"),\n//   block = document.querySelector(\".block\");\n\n// console.log(block);\n// console.log(block?.textContent);\n// console.log(1 + 2);\n\n// const userData = {\n//   name: \"Ivan\",\n//   age: null,\n//   say: function () {\n//     console.log(\"hello\");\n//   },\n// };\n// userData.say();\n// userData.hay?.();\n// if(userData && userData.skills && userData.skills.js){\n// \tconsole.log(userData.skills.js);\n// }\n\n// console.log(userData.skills?.js);\n\n// const user = {\n//   name: \"Alex\",\n//   surname: \"Smith\",\n//   birthday: \"20/04/1998\",\n//   showMyPublicData() {\n//     console.log(`${this.name} ${this.surname}`);\n//   },\n// };\n// console.log(user);\n\n// const userMap = new Map(Object.entries(user));\n// console.log(userMap);\n\n// const newUserObject = Object.fromEntries(userMap);\n// console.log(newUserObject);\n\n// const shops = [{ rise: 500 }, { oil: 200 }, { bread: 50 }];\n\n// const budget = [5000, 2000, 750];\n// const map = new Map([[{ paper: 400 }, 8000]]);\n\n// shops.forEach((shop, i) => {\n//   map.set(shop, budget[i]);\n// });\n// console.log(map.get(shops[0]));\n// console.log(map.has(shops[0]));\n// map.delete(shops[0]);\n// map.clear;\n// map.size;\n// map.keys();\n// console.log(map);\n\n// const goods = [];\n// for (let shop of map.keys()) {\n//   console.log(shop);\n//   goods.push(Object.keys(shop)[0]);\n// }\n// console.log(goods);\n\n// for (let price of map.values()) {\n//   console.log(price);\n// }\n\n// for (let [shop, price] of map.entries()) {\n//   console.log(shop ,price);\n// }\n\n// map.forEach((value, key, map) => {\n//   console.log(key, value);\n// });\n\n// const arr = [\"Alex\", \"Ann\", \"Peter\", \"Alex\", \"Nolan\"];\n// const set = new Set(arr);\n\n// set.add(\"Igor\");\n\n// console.log(set);\n\n// set.delete();\n// set.has();\n// set.clear();\n// set.size();\n\n// for (let value of set){\n// \tconsole.log(value);\n// }\n\n// set.forEach((value, valueAgain, set) => {\n// console.log(value, valueAgain);\n// })\n\n// console.log(set.values());\n\n// function unique(arr) {\n//   return Array.from(new Set(arr));\n// }\n\n// console.log(unique(arr));\n\n// const bigint = 564654564123468823123n;\n\n// console.log(2n === 2);\n\n// let bigint = 1n;\n// let number = 2;\n\n// console.log(bigint + BigInt(number));\n// console.log(Number(bigint) + number);\n\n// const btns = document.querySelectorAll(\"button\"),\n//   wrapper = document.querySelector(\".btn-block\");\n\n// console.log(btns[0].classList.length);\n// console.log(btns[0].classList.item(0));\n// console.log(btns[1].classList.add(\"red\", \"bold\"));\n// console.log(btns[0].classList.remove(\"blue\"));\n// console.log(btns[0].classList.toggle(\"blue\"));\n\n// if (btns[1].classList.contains(\"red\")) {\n//   console.log(\"red\");\n// }\n\n// btns[1].addEventListener(\"click\", () => {\n// if (!btns[1].classList.contains(\"yellow\")) {\n//   btns[1].classList.add(\"yellow\");\n// } else {\n// \tbtns[1].classList.remove(\"yellow\");\n// }\n// \tbtns[1].classList.toggle('yellow');\n// });\n\n// btns.forEach((btn) => {\n// \tbtn.addEventListener(\"click\", () => {\n// \t\tbtn.classList.toggle('yellow');\n// \t})\n// })\n\n// wrapper.addEventListener(\"click\", (event) => {\n//   if (event.target && event.target.tagName == \"BUTTON\") {\n//     console.log(\"some text\");\n//   }\n// });\n\n// const btn = document.createElement(\"button\");\n// btn.classList.add(\"yellow\");\n// wrapper.append(btn);\n\n\n//# sourceURL=webpack://gulp_struct/./src/js/exercice.js?");

/***/ }),

/***/ "./src/js/practice.js":
/*!****************************!*\
  !*** ./src/js/practice.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\n// document.addEventListener(\"DOMContentLoaded\", () => {\n//   const movieDB = {\n//     movies: [\n//       \"Логан\",\n//       \"Лига справедливости\",\n//       \"Ла-ла лэнд\",\n//       \"Одержимость\",\n//       \"Скотт Пилигрим против...\",\n//     ],\n//   };\n\n//   const deleteAdv = (arr) => {\n//     arr.forEach((item) => {\n//       item.remove();\n//     });\n//   };\n\n//   const div = document.createElement(\"div\"),\n//     poster = document.querySelector(\".promo__bg\"),\n//     genre = poster.querySelector(\".promo__genre\");\n\n//   const ul = document.querySelector(\".promo__interactive-list\"),\n//     filmName = ul.querySelectorAll(\".promo__interactive-item\");\n\n//   const form = document.querySelector(\".add\"),\n//     input = form.querySelector(\".adding__input\"),\n//     checkBox = form.querySelector(\"[type='checkbox']\");\n\n//   const makeChanges = () => {\n//     genre.textContent = \"Драма\";\n//     poster.style.backgroundImage = `url(\"img/bg.jpg\")`;\n//   };\n\n//   const sortArr = (arr) => {\n//     arr.sort();\n//   };\n\n//   function createMovieList(films, parent) {\n//     parent.innerHTML = \"\";\n//     sortArr(films);\n\n//     movieDB.movies.forEach((film, i) => {\n//       parent.innerHTML += `\n// \t\t\t<li class=\"promo__interactive-item\">${i + 1} ${film}\n// \t\t\t<div class=\"delete\"></div>\n// \t\t\t</li>\n// \t\t\t`;\n//     });\n\n//     document.querySelectorAll(\".delete\").forEach((el, i) => {\n//       el.addEventListener(\"click\", () => {\n//         el.parentElement.remove();\n//         movieDB.movies.splice(i, 1);\n//         createMovieList(films, parent);\n//       });\n//     });\n//   }\n\n//   form.addEventListener(\"submit\", (event) => {\n//     event.preventDefault();\n\n//     let newFilm = input.value,\n//       favorite = checkBox.checked;\n\n//     if (newFilm) {\n//       if (newFilm.length > 21) {\n//         newFilm = `${newFilm.substring(0, 22)}...`;\n//       }\n//       favorite ? console.log(\"Adding favorite movie\") : null;\n//       movieDB.movies.push(newFilm);\n//       createMovieList(movieDB.movies, ul);\n//     } else {\n//       alert(\"Edit mobie name\");\n//     }\n//     event.target.reset();\n//   });\n\n//   deleteAdv(document.querySelectorAll(\".promo__adv img\"));\n//   makeChanges();\n//   createMovieList(movieDB.movies, ul);\n// });\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!! wrong way\n// function movieList() {\n// \tmovieDB.movies.sort();\n// \tmovieDB.movies.forEach((film, i) => {\n// \t\tfilmName[i].textContent = `${i + 1} ${movieDB.movies[i]}\\n`;\n// \t});\n// }\n\n// form.addEventListener(\"submit\", (event) => {\n// \tconst li = document.createElement(\"li\"),\n// \t\tnewMovie = input.value;\n// \tevent.preventDefault();\n// \tif (newMovie === \"\") {\n// \t\talert(\"Введите название фильма!\");\n// \t\treturn false;\n// \t}\n\n// \tmovieDB.movies.push(newMovie);\n// \tmovieDB.movies.sort();\n// \tli.appendChild(document.createTextNode(newMovie));\n// \tli.classList.add(\"promo__interactive-item\");\n// \tul.appendChild(li);\n// \tinput.value = \"\";\n// \tconsole.log(filmName);\n// });\n\n// let user = { name: \"Jhon\" },\n//   map = new WeakMap();\n// map.set(user, \"data\");\n\n// user = null;\n// console.log(map.has());\n\nlet cache = new WeakMap();\n\nfunction cacheUser(user) {\n  if (!cache.has(user)) cache.set(user, Date.now());\n  return cache.get(user);\n}\n\nlet lena = { name: \"Elena\" },\n  alex = { name: \"Alex\" };\n\ncacheUser(lena);\ncacheUser(alex);\n\nlena = null;\nconsole.log(cache.has(lena));\nconsole.log(cache.has(alex));\n\nlet messages = [\n  { text: \"Hello\", from: \"Jhon\" },\n  { text: \"World\", from: \"Helen\" },\n  { text: \"!!\", from: \"Amanda\" },\n  { text: \"...\", from: \"Michel\" },\n];\n\nlet readMessages = new WeakSet();\n\nreadMessages.add(messages[0]);\nreadMessages.add(messages[1]);\n\n\n//# sourceURL=webpack://gulp_struct/./src/js/practice.js?");

/***/ }),

/***/ "./src/js/script.js":
/*!**************************!*\
  !*** ./src/js/script.js ***!
  \**************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n\n// const personalMovieDB = {\n//   count: 0,\n//   movies: {},\n//   actors: {},\n//   genres: [],\n//   privat: false,\n//   start: function () {\n//     this.count = +prompt(\"Сколько фильмов вы уже посмотрели?\", \"\");\n\n//     while (this.count == \"\" || this.count == null || isNaN(this.count)) {\n//       this.count = +prompt(\"Сколько фильмов вы уже посмотрели?\", \"\");\n//     }\n//   },\n//   rememberMyFilms: function () {\n//     for (let i = 0; i < 2; i++) {\n//       const a = prompt(\"Один из последних просмотренных фильмов?\", \"\").trim(),\n//         b = prompt(\"На сколько оцените его?\", \"\");\n\n//       if (a != null && b != null && a != \"\" && b != \"\" && a.length < 50) {\n//         personalMovieDB.movies[a] = b;\n//         console.log(\"done\");\n//       } else {\n//         alert(\"error\");\n//         i--;\n//       }\n//       if (i === 1) {\n//         alert(\"Thank you for your answers!!\");\n//       }\n//     }\n//   },\n//   detectPersonalLevel: function () {\n//     if (personalMovieDB.count < 10) {\n//       alert(\"Просмотрено довольно мало фильмов\");\n//     } else if (personalMovieDB.count >= 10 && personalMovieDB.count < 30) {\n//       alert(\"Вы классический зритель\");\n//     } else if (personalMovieDB.count >= 30) {\n//       alert(\"Вы киноман\");\n//     } else {\n//       alert(\"Произошла ошибка\");\n//     }\n//   },\n//   writeYourGenres: function () {\n//     for (let i = 1; i < 4; i++) {\n//       const genre = prompt(`You favorite genre ${i}?`, \"\");\n//       if (genre != null && genre != \"\") {\n//         personalMovieDB.genres.push(genre);\n//       } else {\n//         i--;\n//         alert(\"Error\");\n//       }\n//     }\n//     this.genres.forEach(function (genre, i) {\n//       console.log(`Favorite genre #${i + 1} - ${genre}`);\n//     });\n//   },\n//   toggleVisibleNyDB: function () {\n//     if (personalMovieDB.privat) {\n//       personalMovieDB.privat = false;\n//     } else {\n//       personalMovieDB.privat = true;\n//     }\n//   },\n//   showMyDB: function () {\n//     if (!personalMovieDB.privat) {\n//       console.log(personalMovieDB);\n//     }\n//   },\n// };\n\n// personalMovieDB.start();\n// // personalMovieDB.rememberMyFilms();\n// // personalMovieDB.detectPersonalLevel();\n// personalMovieDB.writeYourGenres();\n// personalMovieDB.toggleVisibleNyDB(personalMovieDB.privat);\n// console.log(personalMovieDB.privat);\n// personalMovieDB.showMyDB();\n\n// const box = document.getElementById(\"box\"),\n//   buttons = document.getElementsByTagName(\"button\"),\n//   circles = document.getElementsByClassName(\"circle\"),\n//   hearts = document.querySelectorAll(\".heart\"),\n//   oneHeart = document.querySelector(\".heart\"),\n//   wrapper = document.querySelector(\".wrapper\");\n\n// box.style.backgroundColor = \"blue\";\n// box.style.width = \"500px\";\n// box.style.height = \"375px\";\n\n// buttons[0].style.borderRadius = \"25px\";\n// circles[0].style.backgroundColor = \"black\";\n\n// box.style.cssText = \"background-color: teal; width: 500px; height: 375px;\";\n\n// for (let i = 0; i < hearts.length; i++) {\n// \thearts[i].style.cssText = \"background-color: red; height: 20px; width: 20px;\"\n// }\n\n// hearts.forEach((item) => {\n//   item.style.cssText = \"background-color: red; height: 20px; width: 20px;\";\n// });\n\n// const div = document.createElement(\"div\"),\n//   text = document.createTextNode(\"I am a new DIV\");\n\n// div.classList.add(\"newDiv\");\n\n// document.body.append(div);\n// document.body.appendChild(div);\n// document.querySelector('.wrapper').append(div);\n// wrapper.prepend(div);\n// hearts[0].before(div);\n\n// circles[0].remove();\n\n// hearts[0].replaceWith(circles[0]);\n\n\n//# sourceURL=webpack://gulp_struct/./src/js/script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./src/js/exercice.js"](0, {}, __webpack_require__);
/******/ 	__webpack_modules__["./src/js/practice.js"](0, {}, __webpack_require__);
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/script.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;